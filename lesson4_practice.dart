/*–ù–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –ø–æ–∏–≥—Ä–∞–π—Ç–µ—Å—å —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ —Ç–∏–ø–æ–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö numbers(–Ω–∞–ø—Ä–∏–º–µ—Ä: 
toInt(),toDouble() –∏ —Ç.–¥.), string(–Ω–∞–ø—Ä–∏–º–µ—Ä: first, length –∏ —Ç.–¥.), 
list (–Ω–∞–ø—Ä–∏–º–µ—Ä: add, addAll, insert, clear –∏ —Ç.–¥.)*/
void main(List<String> args) {
  int a = 1;
  print(a.toDouble());
  double a1 = 2.2;
  //a1.toInt(); –≤–æ—Ç —Ç–∞–∫ –±–µ–∑ print –Ω–µ–ª—å–∑—è –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—èüòÖ
  //print(a1);
  print(a1.toInt());
  print(a.isEven); //–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å, –≤—ã–≤–æ–¥:false
  print(a.isOdd); // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ—á–µ—Ç–Ω–æ—Å—Ç—å, –≤—ã–≤–æ–¥:true
  print(a.compareTo(a1)); //–≤—ã–≤–æ–¥:-1
  double b = 3.5; //–æ–∫—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b, –≤—ã–≤–æ–¥:4
  print(b.round());
  double b1 = 2.1; //–æ–µ—Ä—É–≥–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b1 –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É, –≤—ã–≤–æ–¥:3
  print(b1.ceil());
  String year = "2023";
  print(num.parse(year).runtimeType); //–≤—ã–≤–æ–¥:int
  print(double.parse(year).runtimeType); //–≤—ã–≤–æ–¥:double

  String word = "Dart ";
  print(word.length); //–≤—ã–≤–æ–¥:5
  print(word.isEmpty); //–≤—ã–≤–æ–¥:false
  print(word.isNotEmpty); //–≤—ã–≤–æ–¥:true
  print(word.toLowerCase()); //–≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä
  print(word.toUpperCase()); //–í –í–ï–†–•–ù–ò–ô –†–ï–ì–ò–°–¢–†
  print(word.trim()); //—É–¥–∞–ª—è–µ—Ç –≤–Ω–µ—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
  String word2 = "dart flutter";
  print(word.compareTo(word2)); //—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º, –≤—ã–≤–æ–¥: -1
  print(word2.replaceAll("t", "2")); //–≤—ã–≤–æ–¥:dar2 flu22er
  print(word2.split("")); //–≤—ã–≤–æ–¥:[d, a, r, t,  , f, l, u, t, t, e, r]
  print(word2.split("t")); //–≤—ã–≤–æ–¥:[dar,  flu, , er]
  print(word2.substring(0, 3)); //–≤—ã–≤–æ–¥:dar
  print(word.substring(0, 4) + word2.substring(10, 12)); //–≤—ã–≤–æ–¥:Darter

  List spisok = [1, 3, 4.4, "dart", true];
  spisok.add(22);
  print(spisok); //–≤—ã–≤–æ–¥:[1, 3, 4.4, dart, true, 22]
  spisok.addAll([22, false, 44]);
  print(spisok); //[1, 3, 4.4, dart, true, 22, 22, false, 44]
  spisok.insert(0, 33);
  print(spisok); //[33, 1, 3, 4.4, dart, true, 22, 22, false, 44]
  spisok.insertAll(4, [3, false, "SDK"]);
  print(spisok); //[33, 1, 3, 4.4, 3, false, SDK, dart, true, 22, 22, false, 44]
  spisok.remove(true);
  print(spisok); //[33, 1, 3, 4.4, 3, false, SDK, dart, 22, 22, false, 44]
  spisok.removeAt(5);
  print(spisok); //[33, 1, 3, 4.4, 3, SDK, dart, 22, 22, false, 44]
  print(spisok.last);
  print(spisok.first);
  print(spisok.reversed); //(44, false, 22, 22, dart, SDK, 3, 4.4, 3, 1, 33)
  print(spisok.reversed
      .toList()); //[44, false, 22, 22, dart, SDK, 3, 4.4, 3, 1, 33]
}
